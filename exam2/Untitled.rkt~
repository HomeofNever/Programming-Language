(define (fun lis)
  (cond ((null? lis) lis)
        ((null? (cdr lis)) lis)
        ((equal? (car lis) (car (cdr lis))) (fun (cdr lis)))
        (else (cons (car lis) (fun (cdr lis))))))

(define (fun_helper lis total)
  (cond ((null? lis) total)
        ((null? (cdr lis)) (cons (car lis) total))
        ((equal? (car lis) (car (cdr lis))) (fun_tail (cdr lis) total))
        (else (fun_tail (cdr lis) (cons (car lis) total)))))

(define (fun lis)
  (reverse (fun_helper lis '())))

(fun '(1 1 3 3 4))
(fun_start '(1 2 1 2))